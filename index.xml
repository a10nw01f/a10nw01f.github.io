<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alon Wolf</title>
    <link>https://a10nw01f.github.io/</link>
    <description>Recent content on Alon Wolf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://a10nw01f.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Borrow Checker, Lifetimes and Destructor Arguments in C&#43;&#43;</title>
      <link>https://a10nw01f.github.io/post/advanced_compile_time_validation/</link>
      <pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://a10nw01f.github.io/post/advanced_compile_time_validation/</guid>
      <description>Library and Code Below is a detailed explanation, but if you prefer to dive straight into the complete implementation code, you can find it on this GitHub repository:&#xA;https://github.com/a10nw01f/Mitzi/&#xA;Or on compiler explorer:&#xA;https://godbolt.org/z/71qs619Ge&#xA;Safety in C++ In the realm of modern software development, ensuring memory safety and guarding against security vulnerabilities remains paramount, particularly in languages like C++ which faced some criticism.&#xA;Bjarne Stroustrup addressed this topic in this year&amp;rsquo;s CppCon opening keynote which I had both the great pleasure of hearing in person and the immense stress of presenting immediately after.</description>
    </item>
    <item>
      <title>Live DLL Reloading</title>
      <link>https://a10nw01f.github.io/post/live_dll_reloading/</link>
      <pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://a10nw01f.github.io/post/live_dll_reloading/</guid>
      <description>Live DLL Reloading Iteration time is very important for development and debugging. Usually, in order to see the effects of a change in code we need to close the process, compile a new version, start the process again and then reach a specific part or scenario in the program - this entire flow can be very slow. DLL live reloading can decrease iteration times by replacing an old DLL with a new one during runtime without even closing the process so that we can observe the changes almost immediatly.</description>
    </item>
    <item>
      <title>Generative C&#43;&#43;</title>
      <link>https://a10nw01f.github.io/post/generative_cpp/</link>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://a10nw01f.github.io/post/generative_cpp/</guid>
      <description>Code Generation in C++ The two main ways to generate code in c++ are templates and macros. While macros can manipulate text they lack the compile time information and constraints that the compiler provides. Templates on the other hand are incredibly powerful especially with c++20’s concepts, non type template parameters and increased constexpr support, however they still lack the ability to manipulate strings such as identifiers and keywords.&#xA;Metaclasses A proposal by Herb Sutter to add metaclasses to the c++ language.</description>
    </item>
    <item>
      <title></title>
      <link>https://a10nw01f.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://a10nw01f.github.io/about/</guid>
      <description>About Me Huabing Zhao is a software architect, an Istio Member and an ONAP PTL. He has a solid experience in the information and telecommunication technology industry for more than 17 years. Throughout his career, he has built a number of large-scale, cross-country software systems, most of them are still running in production. He loves open source and has been contributing to various open source projects, he is a member</description>
    </item>
    <item>
      <title></title>
      <link>https://a10nw01f.github.io/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://a10nw01f.github.io/notes/</guid>
      <description>Go 语言学习笔记 Envoy 学习笔记</description>
    </item>
    <item>
      <title></title>
      <link>https://a10nw01f.github.io/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://a10nw01f.github.io/search/placeholder/</guid>
      <description></description>
    </item>
    <item>
      <title>Posts Archive</title>
      <link>https://a10nw01f.github.io/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://a10nw01f.github.io/archive/</guid>
      <description></description>
    </item>
  </channel>
</rss>
